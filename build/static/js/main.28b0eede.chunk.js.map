{"version":3,"sources":["colors.js","components/CountriesFilter/CountriesFilterElements.js","components/CountriesFilter/index.js","components/CountriesList/CountriesListElements.js","components/CountryItem/CountryItemElements.js","components/Map/index.js","components/UI/Modal/ModelElements.js","components/CountryDetails/CountryDetailsElements.js","components/CountryDetails/index.js","components/CountryItem/index.js","components/CountriesList/index.js","components/UI/Card/CardElements.js","components/UI/Card/index.js","components/Countries/index.js","components/Info/InfoElements.js","components/Info/index.js","App.js","index.js"],"names":["COLORS","Filter","styled","div","FilterControl","SelectFilter","InputFilter","Label","label","Select","select","Option","option","Input","input","CountriesFilter","props","regions","items","map","item","region","filter","index","indexOf","value","selected","onChange","event","onChangeFilter","target","htmlFor","type","id","onChangeInputFilter","toLowerCase","Fallback","h2","ListWrap","List","ul","ButtonWrap","Button","button","ListItem","li","Card","CardHeader","CardBody","CardTitle","CardSubtitle","h3","p","MyMapComponent","withScriptjs","withGoogleMap","latitude","coordinates","longtitude","key","itemKey","key2","coordinate","defaultZoom","defaultCenter","lat","lng","position","Modal","CloseIcon","AiFillCloseSquare","Title","SubTitle","h4","CardBodyItem","Paragraph","Image","img","Sup","sup","LoadingElement","ContainerElement","MapElement","CountryDetails","onClick","onCLose","name","src","flag","alt","capital","population","subregion","area","latlng","isMarkerShown","googleMapURL","loadingElement","containerElement","mapElement","CountryItem","useState","detailsIsShown","setDetailsIsShown","alpha3Code","CountriesList","offset","setOffset","length","listItems","i","push","idx","callingCodes","btns","elem","changePage","Math","ceil","CardContainer","children","Countries","filteredRegion","setFilteredRegion","filteredName","setFilteredName","filteredCountries","country","filteredByNames","isEnteredName","selectedName","enteredName","Section","section","Header","h1","WorldIcon","GiWorld","InfoSection","App","countriesData","setCountriesData","useEffect","fetch","then","res","json","data","catch","err","console","log","message","Info","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.28b0eede.chunk.js","sourcesContent":["export const COLORS = {\r\n  primary: \"#003857\",\r\n  dark: \"#003049\",\r\n  red: \"#d62828\",\r\n  orange: \"#f77f00\",\r\n  yellow: \"#fcbf49\",\r\n  light: \"#eae2b7\",\r\n  blue: \"#277da1\",\r\n  lightBlue: \"#457b9d\",\r\n  white: \"#fff\",\r\n  black: \"#1d3557\",\r\n  lightWater: \"#D4F1F9\",\r\n  water: \"#008BD6\",\r\n};\r\n","import styled from \"styled-components\";\r\nimport { COLORS } from \"../../colors\";\r\n\r\nexport const Filter = styled.div`\r\n  padding: 10px 20px;\r\n  -webkit-box-shadow: 2px 2px 18px 2px rgba(0, 0, 0, 0.25);\r\n  box-shadow: 2px 2px 18px 2px rgba(0, 0, 0, 0.25);\r\n  border-radius: 10px;\r\n  width: 100%;\r\n  height: 10%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  @media screen and (max-width: 1366px) {\r\n    height: 12%;\r\n  }\r\n\r\n  @media screen and (max-width: 1024px) {\r\n    height: 20%;\r\n  }\r\n`;\r\n\r\nexport const FilterControl = styled.div`\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n\r\n  @media screen and (max-width: 1024px) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n\r\nexport const SelectFilter = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  width: 45%;\r\n\r\n  @media screen and (max-width: 1024px) {\r\n    width: 100%;\r\n    justify-content: flex-start;\r\n    margin: 10px 0;\r\n  }\r\n\r\n  @media screen and (max-width: 576px) {\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\nexport const InputFilter = styled.div`\r\n  display: flex;\r\n  align-items: flex-end;\r\n  width: 45%;\r\n\r\n  @media screen and (max-width: 1024px) {\r\n    width: 100%;\r\n    justify-content: flex-start;\r\n    margin: 10px 0;\r\n  }\r\n\r\n  @media screen and (max-width: 576px) {\r\n    flex-direction: row;\r\n  }\r\n`;\r\n\r\nexport const Label = styled.label`\r\n  width: 60%;\r\n  cursor: pointer;\r\n  font-size: 20px;\r\n  color: ${COLORS.dark};\r\n\r\n  @media screen and (max-width: 1366px) {\r\n    font-size: 18px;\r\n    width: 80%;\r\n  }\r\n\r\n  @media screen and (max-width: 1024px) {\r\n    font-size: 18px;\r\n  }\r\n\r\n  @media screen and (max-width: 768px) {\r\n    width: 100%;\r\n  }\r\n\r\n  @media screen and (max-width: 576px) {\r\n    font-size: 13px;\r\n  }\r\n\r\n  @media screen and (max-width: 360px) {\r\n  }\r\n`;\r\n\r\nexport const Select = styled.select`\r\n  width: 400px;\r\n  height: 26px;\r\n  background: ${COLORS.white};\r\n  color: gray;\r\n  font-size: 19px;\r\n  border: none;\r\n  border-bottom: 1px solid ${COLORS.black};\r\n  cursor: pointer;\r\n\r\n  &:focus {\r\n    outline: none;\r\n  }\r\n  /* @media screen and (max-width: 1366px) {\r\n    font-size: 18px;\r\n    width: 70%;\r\n  } */\r\n\r\n  @media screen and (max-width: 1024px) {\r\n    font-size: 18px;\r\n  }\r\n\r\n  @media screen and (max-width: 576px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport const Option = styled.option`\r\n  color: black;\r\n  background: white;\r\n  display: flex;\r\n  white-space: pre;\r\n  height: 26px;\r\n  padding: 0px 2px 1px;\r\n  font-size: 18px;\r\n  line-height: 4px;\r\n  @media screen and (max-width: 1024px) {\r\n    font-size: 16px;\r\n  }\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  width: 400px;\r\n  height: 26px;\r\n  font-size: 21px;\r\n  color: ${COLORS.dark};\r\n  font-weight: 300;\r\n  border: none;\r\n  border-bottom: 1px solid ${COLORS.black};\r\n  text-transform: capitalize;\r\n  &:focus {\r\n    outline: 0;\r\n  }\r\n  @media screen and (max-width: 1366px) {\r\n    font-size: 18px;\r\n    width: 70%;\r\n  }\r\n  @media screen and (max-width: 1024px) {\r\n    font-size: 18px;\r\n  }\r\n  @media screen and (max-width: 768px) {\r\n    font-size: 18px;\r\n    width: 80%;\r\n  }\r\n  @media screen and (max-width: 576px) {\r\n    width: 100%;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport {\r\n  Filter,\r\n  FilterControl,\r\n  Label,\r\n  Select,\r\n  Option,\r\n  Input,\r\n  InputFilter,\r\n  SelectFilter,\r\n} from \"./CountriesFilterElements\";\r\n\r\nconst CountriesFilter = (props) => {\r\n  const dropdownChangeHandler = (event) => {\r\n    props.onChangeFilter(event.target.value);\r\n  };\r\n\r\n  let regions = props.items.map((item) => {\r\n    return item.region;\r\n  });\r\n  regions = regions.filter((region, index) => {\r\n    return regions.indexOf(region) === index;\r\n  });\r\n\r\n  const inputChangeHandler = (event) => {\r\n    props.onChangeInputFilter(event.target.value.toLowerCase());\r\n  };\r\n\r\n  return (\r\n    <Filter>\r\n      <FilterControl>\r\n        <SelectFilter>\r\n          <Label>Filter country by region:</Label>\r\n          <Select value={props.selected} onChange={dropdownChangeHandler}>\r\n            {regions.map(\r\n              (region) =>\r\n                region !== \"\" && (\r\n                  <Option key={region} value={region}>\r\n                    {region}\r\n                  </Option>\r\n                )\r\n            )}\r\n          </Select>\r\n        </SelectFilter>\r\n        <InputFilter>\r\n          <Label htmlFor=\"countryNameFilter\">Filter country by name:</Label>\r\n          <Input\r\n            type=\"text\"\r\n            id=\"countryNameFilter\"\r\n            onChange={inputChangeHandler}\r\n          />\r\n        </InputFilter>\r\n      </FilterControl>\r\n    </Filter>\r\n  );\r\n};\r\n\r\nexport default CountriesFilter;\r\n","import styled from \"styled-components\";\r\nimport { COLORS } from \"../../colors\";\r\n\r\nexport const Fallback = styled.h2`\r\n  color: ${COLORS.red};\r\n  position: fixed;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n`;\r\n\r\nexport const ListWrap = styled.div`\r\n  position: relative;\r\n  display: flex;\r\n  flex-direction: column;\r\n  margin-top: 20px;\r\n  border-radius: 12px;\r\n  box-shadow: 0 1px 8px rgba(0, 0, 0, 0.25);\r\n`;\r\n\r\nexport const List = styled.ul`\r\n  list-style: none;\r\n  color: black;\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr 1fr;\r\n  grid-gap: 10px;\r\n  padding: 10px 20px;\r\n\r\n  @media screen and (max-width: 1024px) {\r\n    grid-gap: 15px;\r\n  }\r\n\r\n  @media screen and (max-width: 576px) {\r\n    grid-gap: 0px;\r\n  }\r\n\r\n  @media screen and (max-width: 480px) {\r\n    grid-template-columns: 2fr 2fr;\r\n    padding: 0;\r\n  }\r\n`;\r\n\r\nexport const ButtonWrap = styled.div`\r\n  position: absolute;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 6vw;\r\n  padding: 10px;\r\n  top: 100%;\r\n  left: 50%;\r\n  /* bring your own prefixes */\r\n  transform: translate(-50%, -20%);\r\n\r\n  @media screen and (max-width: 1024px) {\r\n    top: 100%;\r\n    left: 50%;\r\n    transform: translate(-50%, 20%);\r\n  }\r\n`;\r\n\r\nexport const Button = styled.button`\r\n  border: none;\r\n  border-radius: 7px;\r\n  margin: 5px;\r\n  padding: 7px 10px;\r\n  cursor: pointer;\r\n  color: ${COLORS.white};\r\n  font-size: 18px;\r\n  background-color: ${COLORS.dark};\r\n  transition: all 0.1s ease-out;\r\n  &:hover {\r\n    transform: scale(1.1);\r\n  }\r\n  @media screen and (max-width: 1024px) {\r\n    margin: 3px;\r\n    padding: 6px 9px;\r\n    font-size: 15px;\r\n  }\r\n\r\n  @media screen and (max-width: 576px) {\r\n    margin: 3px;\r\n    padding: 4px 7px;\r\n    font-size: 14px;\r\n  }\r\n\r\n  @media screen and (max-width: 480px) {\r\n    margin: 15px 2px 0px 2px;\r\n    padding: 4px 7px;\r\n    font-size: 12px;\r\n  }\r\n\r\n  @media screen and (max-width: 360px) {\r\n    margin: 2px;\r\n    padding: 3px 6px;\r\n    font-size: 13px;\r\n  }\r\n`;\r\n","import styled from \"styled-components\";\r\nimport { COLORS } from \"../../colors\";\r\n\r\nexport const ListItem = styled.li`\r\n  margin: 20px;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  @media screen and (max-width: 1024px) {\r\n    margin: 5px;\r\n  }\r\n\r\n  @media screen and (max-width: 768px) {\r\n    margin: 10px;\r\n  }\r\n`;\r\n\r\nexport const Card = styled.div`\r\n  position: relative;\r\n  -webkit-box-shadow: 2px 2px 18px 2px rgba(0, 0, 0, 0.25);\r\n  box-shadow: 2px 2px 18px 2px rgba(0, 0, 0, 0.25);\r\n  border-radius: 15px;\r\n  width: 100%;\r\n  height: 12vw;\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  cursor: pointer;\r\n  transition: 0.1s all ease-out;\r\n  &:hover {\r\n    transform: scale(1.015);\r\n  }\r\n\r\n  @media screen and (max-width: 1024px) {\r\n    height: 20vw;\r\n  }\r\n\r\n  @media screen and (max-width: 768px) {\r\n    height: 30vw;\r\n  }\r\n\r\n  @media screen and (max-width: 480px) {\r\n    height: 38vw;\r\n  }\r\n`;\r\n\r\nexport const CardHeader = styled.div`\r\n  width: 100%;\r\n  display: flex;\r\n  justify-content: space-around;\r\n  align-items: center;\r\n`;\r\n\r\nexport const CardBody = styled.div``;\r\n\r\nexport const CardTitle = styled.h2`\r\n  font-size: 26px;\r\n  color: ${COLORS.black};\r\n\r\n  @media screen and (max-width: 1024px) {\r\n    font-size: 22px;\r\n  }\r\n\r\n  @media screen and (max-width: 768px) {\r\n    font-size: 17px;\r\n    padding: 0 10px;\r\n    align-items: center;\r\n    text-align: center;\r\n    justify-content: center;\r\n  }\r\n`;\r\nexport const CardSubtitle = styled.h3`\r\n  position: absolute;\r\n  top: 10px;\r\n  right: 10px;\r\n  -webkit-box-shadow: 2px 1px 6px 1px #1d3557;\r\n  box-shadow: 2px 1px 6px 1px #1d3557;\r\n  color: ${COLORS.dark};\r\n  border-radius: 50%;\r\n  padding: 8px;\r\n  font-size: 18px;\r\n\r\n  @media screen and (max-width: 1024px) {\r\n    font-size: 14px;\r\n  }\r\n\r\n  @media screen and (max-width: 768px) {\r\n    font-size: 11px;\r\n    padding: 4px;\r\n  }\r\n\r\n  @media screen and (max-width: 576px) {\r\n    font-size: 9px;\r\n    padding: 2px;\r\n  }\r\n`;\r\n\r\nexport const CardDescription = styled.p``;\r\n","import {\r\n  GoogleMap,\r\n  withScriptjs,\r\n  withGoogleMap,\r\n  Marker,\r\n} from \"react-google-maps\";\r\n\r\nconst MyMapComponent = withScriptjs(\r\n  withGoogleMap((props) => {\r\n    let latitude = props.coordinates[0];\r\n    let longtitude = props.coordinates[1];\r\n    const key = props.itemKey + \"Key\";\r\n    const key2 = props.itemKey + \"Key2\";\r\n    return (\r\n      <>\r\n        {props.coordinates.map((coordinate) => (\r\n          <GoogleMap\r\n            key={key}\r\n            defaultZoom={5}\r\n            defaultCenter={{\r\n              lat: latitude,\r\n              lng: longtitude,\r\n            }}\r\n          >\r\n            <Marker\r\n              key={key2}\r\n              position={{\r\n                lat: latitude,\r\n                lng: longtitude,\r\n              }}\r\n            />\r\n          </GoogleMap>\r\n        ))}\r\n      </>\r\n    );\r\n  })\r\n);\r\n\r\nexport default MyMapComponent;\r\n","import styled from \"styled-components\";\r\n\r\nexport const BackdropWrap = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100vh;\r\n  z-index: 20;\r\n  background-color: rgba(0, 0, 0, 0.75);\r\n`;\r\n\r\nexport const Modal = styled.div`\r\n  position: fixed;\r\n  top: 20vh;\r\n  left: 30%;\r\n  width: 40%;\r\n  height: 35vw;\r\n  background-color: white;\r\n  padding: 1rem;\r\n  border-radius: 14px;\r\n  -webkit-box-shadow: 5px 5px 50px 20px rgba(0, 0, 0, 0.65);\r\n  box-shadow: 5px 5px 50px 20px rgba(0, 0, 0, 0.65);\r\n  z-index: 30;\r\n  animation: slide-down 300ms ease-out forwards;\r\n\r\n  @keyframes slide-down {\r\n    from {\r\n      opacity: 0;\r\n      transform: translateY(-3rem);\r\n    }\r\n    to {\r\n      opacity: 1;\r\n      transform: translateY(0);\r\n    }\r\n  }\r\n\r\n  @media screen and (max-width: 1440px) {\r\n    width: 50%;\r\n    left: calc(50% - 350px);\r\n    top: 18vw;\r\n    height: 44vw;\r\n    -webkit-box-shadow: 5px 5px 30px 7px rgba(0, 0, 0, 0.65);\r\n    box-shadow: 5px 5px 30px 7px rgba(0, 0, 0, 0.65);\r\n  }\r\n  @media screen and (max-width: 1220px) {\r\n    left: calc(50% - 300px);\r\n    top: 18vw;\r\n    height: 50vw;\r\n  }\r\n\r\n  @media screen and (max-width: 1024px) {\r\n    left: calc(50% - 265px);\r\n    top: 20vw;\r\n    height: 60vw;\r\n  }\r\n\r\n  @media screen and (max-width: 768px) {\r\n    left: calc(50% - 238px);\r\n    top: 20vh;\r\n    height: 80vw;\r\n    width: 62%;\r\n  }\r\n\r\n  @media screen and (max-width: 576px) {\r\n    left: calc(50% - 165px);\r\n    top: 21vh;\r\n    height: 100vw;\r\n    width: 60%;\r\n  }\r\n\r\n  @media screen and (max-width: 480px) {\r\n    left: calc(50% - 165px);\r\n    top: 18vh;\r\n    height: 140vw;\r\n    width: 80%;\r\n  }\r\n  @media screen and (max-width: 400px) {\r\n    left: calc(50% - 164px);\r\n    top: 18vh;\r\n    height: 125vw;\r\n    width: 82%;\r\n  }\r\n  @media screen and (max-width: 375px) {\r\n    left: calc(50% - 150px);\r\n    top: 18vh;\r\n    height: 135vw;\r\n    width: 80%;\r\n  }\r\n`;\r\n\r\nexport const Content = styled.div``;\r\n","import styled from \"styled-components\";\r\nimport { AiFillCloseSquare } from \"react-icons/ai\";\r\n\r\nexport const CloseIcon = styled(AiFillCloseSquare)`\r\n  font-size: 20px;\r\n  float: right;\r\n  margin-bottom: 4px;\r\n  cursor: pointer;\r\n  transition: 0.1s all ease-out;\r\n  border-radius: 20px;\r\n  &:hover {\r\n    transform: scale(1.1);\r\n  }\r\n`;\r\n\r\nexport const Card = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n`;\r\n\r\nexport const CardHeader = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  border-bottom: 1px solid black;\r\n  padding: 30px 0px 15px 0;\r\n`;\r\n\r\nexport const Title = styled.h2``;\r\n\r\nexport const SubTitle = styled.h4``;\r\n\r\nexport const CardBody = styled.div`\r\n  padding: 20px 0;\r\n`;\r\n\r\nexport const CardBodyItem = styled.div`\r\n  display: flex;\r\n  padding: 5px 0;\r\n`;\r\n\r\nexport const Paragraph = styled.p`\r\n  padding: 0 5px;\r\n`;\r\n\r\nexport const Image = styled.img`\r\n  width: 20%;\r\n  /* height: 100px; */\r\n  height: auto;\r\n  border-radius: 7px;\r\n`;\r\n\r\nexport const Sup = styled.sup`\r\n  font-size: 8px;\r\n`;\r\n\r\nexport const LoadingElement = styled.div`\r\n  height: 70%;\r\n  border-radius: 7px;\r\n  width: 100%;\r\n  @media screen and (max-width: 2200px) {\r\n    height: 68%;\r\n  }\r\n\r\n  @media screen and (max-width: 1980px) {\r\n    height: 60%;\r\n  }\r\n\r\n  @media screen and (max-width: 1580px) {\r\n    height: 52%;\r\n  }\r\n  @media screen and (max-width: 1380px) {\r\n    height: 47%;\r\n  }\r\n  @media screen and (max-width: 1220px) {\r\n    height: 43%;\r\n  }\r\n\r\n  @media screen and (max-width: 768px) {\r\n    height: 190px;\r\n  }\r\n`;\r\n\r\nexport const ContainerElement = styled.div`\r\n  height: 70%;\r\n  border-radius: 7px;\r\n  width: 100%;\r\n\r\n  @media screen and (max-width: 2200px) {\r\n    height: 68%;\r\n  }\r\n\r\n  @media screen and (max-width: 1980px) {\r\n    height: 60%;\r\n  }\r\n\r\n  @media screen and (max-width: 1580px) {\r\n    height: 52%;\r\n  }\r\n  @media screen and (max-width: 1380px) {\r\n    height: 47%;\r\n  }\r\n  @media screen and (max-width: 1220px) {\r\n    height: 43%;\r\n  }\r\n`;\r\n\r\nexport const MapElement = styled.div`\r\n  height: 70%;\r\n  border-radius: 7px;\r\n  width: 100%;\r\n\r\n  @media screen and (max-width: 2200px) {\r\n    height: 68%;\r\n  }\r\n\r\n  @media screen and (max-width: 1980px) {\r\n    height: 60%;\r\n  }\r\n\r\n  @media screen and (max-width: 1580px) {\r\n    height: 52%;\r\n  }\r\n  @media screen and (max-width: 1380px) {\r\n    height: 47%;\r\n  }\r\n  @media screen and (max-width: 1220px) {\r\n    height: 80%;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport MyMapComponent from \"../Map\";\r\nimport { Modal } from \"../UI/Modal/ModelElements\";\r\nimport {\r\n  CloseIcon,\r\n  Card,\r\n  CardHeader,\r\n  Title,\r\n  SubTitle,\r\n  CardBody,\r\n  Paragraph,\r\n  Image,\r\n  CardBodyItem,\r\n  Sup,\r\n  LoadingElement,\r\n  ContainerElement,\r\n  MapElement,\r\n} from \"./CountryDetailsElements\";\r\n\r\n/* ADD KEY TO .ENV !!! */\r\nconst key = \"AIzaSyAt2Rvv2QN6YJD9r4TrWXeY6CzSdeU8WHY\";\r\nconst CountryDetails = (props) => {\r\n  return (\r\n    <Modal>\r\n      <CloseIcon onClick={props.onCLose} />\r\n      <Card>\r\n        <CardHeader>\r\n          <Title>{props.name}</Title>\r\n          <Image src={props.flag} alt={props.name} />\r\n        </CardHeader>\r\n        <CardBody>\r\n          <CardBodyItem>\r\n            <SubTitle>Capital city:</SubTitle>\r\n            <Paragraph>{props.capital}</Paragraph>\r\n          </CardBodyItem>\r\n          <CardBodyItem>\r\n            <SubTitle>Region:</SubTitle>\r\n            <Paragraph>{props.region}</Paragraph>\r\n          </CardBodyItem>\r\n          <CardBodyItem>\r\n            <SubTitle>Population:</SubTitle>\r\n            <Paragraph>{props.population}</Paragraph>\r\n          </CardBodyItem>\r\n          <CardBodyItem>\r\n            <SubTitle>Subregion:</SubTitle>\r\n            <Paragraph>{props.subregion}</Paragraph>\r\n          </CardBodyItem>\r\n          <CardBodyItem>\r\n            <SubTitle>Area:</SubTitle>\r\n            <Paragraph>\r\n              {props.area}km<Sup>2</Sup>\r\n            </Paragraph>\r\n          </CardBodyItem>\r\n        </CardBody>\r\n      </Card>\r\n      <MyMapComponent\r\n        coordinates={props.latlng}\r\n        itemKey={props.name}\r\n        isMarkerShown\r\n        googleMapURL={`https://maps.googleapis.com/maps/api/js?key=${key}&callback=initMap`}\r\n        loadingElement={<LoadingElement />}\r\n        containerElement={<ContainerElement />}\r\n        mapElement={<MapElement />}\r\n      />\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default CountryDetails;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  ListItem,\r\n  Card,\r\n  CardHeader,\r\n  CardTitle,\r\n  CardSubtitle,\r\n  CardBody,\r\n} from \"./CountryItemElements\";\r\nimport CountryDetails from \"../CountryDetails\";\r\n\r\nconst CountryItem = (props) => {\r\n  const [detailsIsShown, setDetailsIsShown] = useState(false);\r\n\r\n  const showDetailsClickHandler = () => {\r\n    setDetailsIsShown(true);\r\n  };\r\n  const hideDetilsClickHandler = () => {\r\n    setDetailsIsShown(false);\r\n  };\r\n\r\n  return (\r\n    <ListItem>\r\n      {detailsIsShown && (\r\n        <CountryDetails\r\n          name={props.name}\r\n          capital={props.capital}\r\n          region={props.region}\r\n          subregion={props.subregion}\r\n          population={props.population}\r\n          area={props.area}\r\n          flag={props.flag}\r\n          latlng={props.latlng}\r\n          onCLose={hideDetilsClickHandler}\r\n        />\r\n      )}\r\n      <Card onClick={showDetailsClickHandler}>\r\n        <CardHeader>\r\n          <CardTitle>{props.name}</CardTitle>\r\n          <CardSubtitle>{props.alpha3Code}</CardSubtitle>\r\n        </CardHeader>\r\n        <CardBody></CardBody>\r\n      </Card>\r\n    </ListItem>\r\n  );\r\n};\r\n\r\nexport default CountryItem;\r\n","import React, { useState } from \"react\";\r\nimport {\r\n  List,\r\n  Fallback,\r\n  ButtonWrap,\r\n  Button,\r\n  ListWrap,\r\n} from \"./CountriesListElements\";\r\nimport CountryItem from \"../CountryItem\";\r\n\r\nconst CountriesList = (props) => {\r\n  const { items } = props;\r\n  const [offset, setOffset] = useState(0);\r\n  const itemsPerPage = 6; // adjust to get various items per page\r\n\r\n  if (props.items.length === 0) {\r\n    return <Fallback>Found no countries.</Fallback>;\r\n  }\r\n\r\n  const changePage = (offset) => {\r\n    setOffset(offset);\r\n  };\r\n  let listItems = [];\r\n  for (\r\n    let i = offset * itemsPerPage;\r\n    i < offset * itemsPerPage + itemsPerPage;\r\n    i++\r\n  ) {\r\n    if (i >= items.length) {\r\n      break;\r\n    }\r\n    listItems.push(items[i]);\r\n  }\r\n\r\n  listItems = listItems.map((item, idx) => {\r\n    return (\r\n      <CountryItem\r\n        key={`list-${idx}`}\r\n        id={item.callingCodes}\r\n        name={item.name}\r\n        population={item.population}\r\n        capital={item.capital}\r\n        region={item.region}\r\n        subregion={item.subregion}\r\n        area={item.area}\r\n        flag={item.flag}\r\n        alpha3Code={item.alpha3Code}\r\n        latlng={item.latlng}\r\n      />\r\n    );\r\n  });\r\n\r\n  const btns = [];\r\n  for (let i = 1; i <= Math.ceil(items.length / itemsPerPage); i++) {\r\n    const elem = (\r\n      <Button key={i} onClick={() => changePage(i - 1)}>\r\n        {i}\r\n      </Button>\r\n    );\r\n    btns.push(elem);\r\n  }\r\n\r\n  return (\r\n    <ListWrap>\r\n      <List>{listItems}</List>\r\n      <ButtonWrap>{btns}</ButtonWrap>\r\n    </ListWrap>\r\n  );\r\n};\r\n\r\nexport default CountriesList;\r\n","import styled from \"styled-components\";\r\nimport { COLORS } from \"../../../colors\";\r\n\r\nexport const CardContainer = styled.div`\r\n  position: relative;\r\n  margin: 50px 150px;\r\n  padding: 14px 40px;\r\n  height: 80vh;\r\n\r\n  @media screen and (max-width: 1024px) {\r\n    margin: 25px 75px;\r\n    padding: 14px 40px;\r\n    height: 80vh;\r\n  }\r\n  @media screen and (max-width: 576px) {\r\n    margin: 25px 5px;\r\n  }\r\n\r\n  @media screen and (max-width: 360px) {\r\n    margin: 10px 0px;\r\n  }\r\n`;\r\n\r\nexport const CardTitle = styled.h2`\r\n  padding: 0px 20px;\r\n  position: relative;\r\n  color: ${COLORS.dark};\r\n  font-size: 30px;\r\n  font-weight: 600;\r\n  letter-spacing: 1px;\r\n  margin-top: 20px;\r\n  margin-bottom: 40px;\r\n\r\n  &::before {\r\n    content: \"\";\r\n    position: absolute;\r\n    left: 60px;\r\n    bottom: -10px;\r\n    width: 200px;\r\n    height: 1.5px;\r\n    background: ${COLORS.dark};\r\n    border-radius: 20px;\r\n    @media screen and (max-width: 1024px) {\r\n      width: 160px;\r\n    }\r\n  }\r\n  @media screen and (max-width: 1024px) {\r\n    font-size: 26px;\r\n  }\r\n\r\n  @media screen and (max-width: 576px) {\r\n    font-size: 22px;\r\n    margin-top: 40px;\r\n  }\r\n\r\n  @media screen and (max-width: 480px) {\r\n    font-size: 20px;\r\n    margin-top: 20px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { CardContainer, CardTitle } from \"./CardElements\";\r\n\r\nconst Card = (props) => {\r\n  return (\r\n    <CardContainer>\r\n      <CardTitle>Countries list</CardTitle>\r\n      {props.children}\r\n    </CardContainer>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React, { useState } from \"react\";\r\nimport CountriesFilter from \"../CountriesFilter\";\r\nimport CountriesList from \"../CountriesList\";\r\nimport Card from \"../UI/Card\";\r\n\r\nconst Countries = (props) => {\r\n  const [filteredRegion, setFilteredRegion] = useState(\"Europe\");\r\n  const [filteredName, setFilteredName] = useState(\"\");\r\n\r\n  const filterChangeHandler = (selectedName) => {\r\n    setFilteredRegion(selectedName);\r\n  };\r\n\r\n  const inputChangeHandler = (enteredName) => {\r\n    setFilteredName(enteredName);\r\n  };\r\n\r\n  const filteredCountries = props.items.filter((country) => {\r\n    return country.region === filteredRegion;\r\n  });\r\n\r\n  const filteredByNames = props.items.filter((country) => {\r\n    return country.name.toLowerCase() === filteredName;\r\n  });\r\n\r\n  let isEnteredName = false;\r\n  if (filteredName !== \"\") {\r\n    isEnteredName = true;\r\n  }\r\n\r\n  return (\r\n    <Card>\r\n      <CountriesFilter\r\n        selected={filteredRegion}\r\n        onChangeFilter={filterChangeHandler}\r\n        onChangeInputFilter={inputChangeHandler}\r\n        items={props.items}\r\n      />\r\n      <CountriesList\r\n        items={isEnteredName ? filteredByNames : filteredCountries}\r\n      />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Countries;\r\n","import styled from \"styled-components\";\r\nimport { GiWorld } from \"react-icons/gi\";\r\nimport { COLORS } from \"../../colors\";\r\n\r\nexport const Section = styled.section`\r\n  display: flex;\r\n  height: 10vh;\r\n`;\r\n\r\nexport const Header = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n  padding-top: 30px;\r\n`;\r\n\r\nexport const Title = styled.h1`\r\n  padding: 28px 10px 30px 60px;\r\n  font-size: 34px;\r\n  color: ${COLORS.primary};\r\n\r\n  @media screen and (max-width: 576px) {\r\n    font-size: 28px;\r\n  }\r\n\r\n  @media screen and (max-width: 480px) {\r\n    font-size: 20px;\r\n  }\r\n\r\n  @media screen and (max-width: 375px) {\r\n    font-size: 20px;\r\n    padding: 28px 10px 30px 30px;\r\n  }\r\n`;\r\n\r\nexport const WorldIcon = styled(GiWorld)`\r\n  color: ${COLORS.lightWater};\r\n  border-bottom-left-radius: 55% 100%;\r\n  border-bottom-right-radius: 55% 100%;\r\n  border-top-left-radius: 55% 100%;\r\n  border-top-right-radius: 55% 100%;\r\n  background: ${COLORS.water};\r\n  width: 45px;\r\n  height: 45px;\r\n\r\n  @media screen and (max-width: 576px) {\r\n    width: 40px;\r\n    height: 40px;\r\n  }\r\n\r\n  @media screen and (max-width: 480px) {\r\n    width: 35px;\r\n    height: 35px;\r\n  }\r\n\r\n  @media screen and (max-width: 360px) {\r\n    width: 30px;\r\n    height: 30px;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport { Section, Title, Header, WorldIcon } from \"./InfoElements\";\r\n\r\nconst InfoSection = () => {\r\n  return (\r\n    <Section>\r\n      <Header>\r\n        <Title>Explore countries of the world</Title>\r\n        <WorldIcon />\r\n      </Header>\r\n    </Section>\r\n  );\r\n};\r\n\r\nexport default InfoSection;\r\n","import { Fragment, useEffect, useState } from \"react\";\nimport Countries from \"./components/Countries/\";\nimport InfoSection from \"./components/Info\";\n\nconst App = () => {\n  const [countriesData, setCountriesData] = useState([]);\n\n  const handleFetch = () => {\n    fetch(\"https://restcountries.eu/rest/v2/all\")\n      .then((res) => res.json())\n      .then((data) => setCountriesData(data))\n      .catch((err) => console.log(\"Error:\", err.message));\n  };\n\n  useEffect(() => {\n    handleFetch();\n  }, []);\n\n  return (\n    <Fragment>\n      <InfoSection />\n      <Countries items={countriesData} />\n    </Fragment>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}